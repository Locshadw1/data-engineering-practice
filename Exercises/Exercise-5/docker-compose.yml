services:
    postgres:
      image: postgres:11
      restart: always
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_HOST_AUTH_METHOD=trust
        - POSTGRES_INITDB_ARGS="--auth-host=trust"
        - PGDATA=/var/lib/postgresql/data/pgdata
      ports:
        - '5432:5432'
      volumes:
        - postgres-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      networks:
        - app-network
    test:
      image: "exercise-5"
      environment:
        - POSTGRES_HOST=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      volumes:
        - .:/app
      command: python3 -m pytest
      networks:
        - app-network
      depends_on:
        postgres:
          condition: service_healthy
    run:
      image: "exercise-5"
      environment:
        - POSTGRES_HOST=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      volumes:
        - .:/app
      command: python3 main.py
      networks:
        - app-network
      depends_on:
        postgres:
          condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
